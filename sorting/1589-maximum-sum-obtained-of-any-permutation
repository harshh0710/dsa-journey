class Solution {
public:
    int maxSumRangeQuery(vector<int>& nums,vector<vector<int>>& requests){
        int n = nums.size();
        vector<long long> diff(n+1,0);  
        
        for(auto& req:requests){
            int start=req[0],end=req[1];
            diff[start]+=1;
            if(end+1<n){
                diff[end+1]-=1;
            }
        }

        vector<long long> freq(n,0);
        freq[0]=diff[0];
        for(int i=1;i<n;i++){
            freq[i]=freq[i-1]+diff[i];
        }

        sort(nums.begin(),nums.end());
        sort(freq.begin(),freq.end());
        
        long long maxSum=0;
        for(int i=0;i<n;i++){
            maxSum+=(long long)nums[i]*freq[i];
        }
        return maxSum%1000000007; 
    }
};
